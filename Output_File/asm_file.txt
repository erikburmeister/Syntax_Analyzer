; Program Name: pgm1

sys_exit	equ	1
sys_read	equ	3
sys_write	equ	4
stdin		equ	0	; default keyboard
stdout		equ	1	; default terminal screen
stderr		equ	3

; -------------------------- declare constants ------------------------------------

section .data
    
    m	dw	7
    n	dw	85
    x	dw	00000
    y	dw	00000
    z	dw	00000
    temp1	dw	00000
    temp2	dw	00000
    temp3	dw	00000
    userMsg         db     'Input an integer: '
    lenUserMsg      equ    $-userMsg
    newline         db     0xA
    Ten             DW     10
    num times 6     db     'ABCDEF'
    numEnd          equ    $-num
    Result          db     'Output: '
    ResultValue     db     'aaaaa'
                    db     0xA
    ResultEnd       equ    $-Result
    
; -------------------------- uninitiated variables ---------------------------------

section .bss 

    TempChar        RESB    1
    testchar        RESB    1
    ReadInt         RESW    1              
    tempint         RESW    1             
    negflag         RESB    1 
    
; -------------------------- Main program -----------------------------------------

global _start   

section .text

_start:
    
    mov ax, 7
    mov [m], ax
    nop
    mov ax, 85
    mov [n], ax
    nop
    mov ax, [y]
    mul byte [z]
    mov [temp3], ax
    mov ax, [m]
    add ax, [temp3]
    mov [temp4], ax
    mov ax, [temp4]
    add ax, 12
    mov [temp5], ax
    mov ax, [temp5]
    mov [x], ax
    nop
; -------------------------- End Main program -------------------------------------

fini:

    mov eax,sys_exit
    xor ebx,ebx
    int 80h
    
; ------------------------------ functions ----------------------------------------

PrintString:

    push    ax
    push    dx

    ; prompt user

    mov eax, 4
    mov ebx, 1
    mov ecx, userMsg
    mov edx, lenUserMsg
    int 80h
    pop     dx 
    pop     ax
    ret

;End PrintString


GetAnInteger:

    mov eax, 3
    mov ebx, 2
    mov ecx, num
    mov edx, 6
    int 0x80


;End GetAnInteger


ConvertStringToInteger:

    mov ax, 0
    mov [ReadInt], ax 
    mov ecx, num
    mov bx,0
    mov bl, byte [ecx]

Next:

    sub bl,'0'
    mov ax, [ReadInt]
    mov dx, 10
    mul dx
    add ax, bx
    mov [ReadInt], ax
    mov bx, 0
    add ecx, 1
    mov bl, byte[ecx]
    cmp bl,0xA
    jne Next
    ret

;End GetAnInteger


ConvertIntegerToString:

    mov ebx, ResultValue + 4

ConvertLoop:

    sub dx,dx
    mov cx,10
    div cx
    add dl,'0'
    mov [ebx], dl
    dec ebx
    cmp ebx, ResultValue
    jge ConvertLoop

    ret

; End ConvertIntegerToString
